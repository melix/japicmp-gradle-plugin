plugins {
    id 'java'
    id 'me.champeau.gradle.japicmp'
}

repositories {
    mavenCentral()
}

sourceSets {
    main2
}

task jarv2(type:Jar) {
    classifier = 'v2'
    from sourceSets.main2.output
}

task japicmpFieldIncludeOnlyBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    dependsOn jar, jarv2
    oldClasspath = files(jar.archivePath)
    newClasspath = files(jarv2.archivePath)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    fieldIncludes = ['me.champeau.gradle.japicmp.A#bad']
}

task japicmpFieldIncludeOnlyGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    dependsOn jar, jarv2
    oldClasspath = files(jar.archivePath)
    newClasspath = files(jarv2.archivePath)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    fieldIncludes = ['me.champeau.gradle.japicmp.A#unchanged']
}

task japiCmpFieldExcludeKeepBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    dependsOn jar, jarv2
    oldClasspath = files(jar.archivePath)
    newClasspath = files(jarv2.archivePath)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    fieldExcludes = ['me.champeau.gradle.japicmp.A#unchanged']
}

task japicmpFieldExcludeKeepGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    dependsOn jar, jarv2
    oldClasspath = files(jar.archivePath)
    newClasspath = files(jarv2.archivePath)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    fieldExcludes = ['me.champeau.gradle.japicmp.A#bad']
}
