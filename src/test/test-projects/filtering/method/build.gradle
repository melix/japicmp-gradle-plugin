plugins {
    id 'java'
    id 'me.champeau.gradle.japicmp'
}

repositories {
    mavenCentral()
}

sourceSets {
    main2
}

task jarv2(type:Jar) {
    archiveClassifier = 'v2'
    from sourceSets.main2.output
}

task japicmpMethodIncludeOnlyBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    methodIncludes = ['me.champeau.gradle.japicmp.A#getInteger()']
}

task japicmpMethodIncludeOnlyGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    methodIncludes = ['me.champeau.gradle.japicmp.A#unchanged()']
}

task japiCmpMethodExcludeKeepBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    methodExcludes = ['me.champeau.gradle.japicmp.A#unchanged()']
}

task japicmpMethodExcludeKeepGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    methodExcludes = ['me.champeau.gradle.japicmp.A#getInteger()']
}
