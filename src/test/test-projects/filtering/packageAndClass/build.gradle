plugins {
    id 'java'
    id 'me.champeau.gradle.japicmp'
}

sourceSets {
    main2
}

repositories {
    mavenCentral()
}

task jarv2(type:Jar) {
    archiveClassifier = 'v2'
    from sourceSets.main2.output
}

task japicmpPackageIncludeOnlyBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    packageIncludes = ['me.champeau.gradle.japicmp.bad']
}

task japicmpPackageIncludeOnlyGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    packageIncludes = ['me.champeau.gradle.japicmp.good']
}

task japiCmpPackageExcludeKeepBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    packageExcludes = ['me.champeau.gradle.japicmp.good']
}

task japicmpPackageExcludeKeepGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    packageExcludes = ['me.champeau.gradle.japicmp.bad']
}

task japicmpClassIncludeOnlyBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    classIncludes = ['me.champeau.gradle.japicmp.bad.Bad']
}

task japicmpClassIncludeOnlyGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    classIncludes = ['me.champeau.gradle.japicmp.good.Good']
}

task japiCmpClassExcludeKeepBad(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    classExcludes = ['me.champeau.gradle.japicmp.good.Good']
}

task japicmpClassExcludeKeepGood(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(jar)
    newClasspath.from(jarv2)
    txtOutputFile = file("$buildDir/reports/japi.txt")
    classExcludes = ['me.champeau.gradle.japicmp.bad.Bad']
}
