plugins {
    id 'me.champeau.gradle.japicmp'
}

repositories {
    mavenCentral()
}

configurations {
    baseline
    current
}

dependencies {
    baseline 'org.apache.commons:commons-lang3:3.5'
    current 'org.apache.commons:commons-lang3:3.6'
}

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    htmlOutputFile = layout.buildDirectory.file('reports/japi.html').get().asFile
}

task japicmpRich(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    richReport {
        reportName = 'rich.html'
        description = 'A test of rich report'
    }
}

task japicmpMarkdown(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    mdOutputFile = layout.buildDirectory.file('reports/japi.md').get().asFile
}

task japicmpMarkdownReportOnlySummary(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    mdOutputFile = layout.buildDirectory.file('reports/japi.md').get().asFile
    reportOnlySummary = true
}

task japicmpSemver(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    semverOutputFile = layout.buildDirectory.file('reports/japi.semver').get().asFile
}

task japicmpXmlWithoutVersions(type: me.champeau.gradle.japicmp.JapicmpTask) {
    oldClasspath.from(configurations.baseline)
    newClasspath.from(configurations.current)
    xmlOutputFile = layout.buildDirectory.file('reports/japi.xml').get().asFile
}

task japicmpXmlWithVersions(type: me.champeau.gradle.japicmp.JapicmpTask) {
    addOldArchives(configurations.baseline)
    addNewArchives(configurations.current)
    xmlOutputFile = layout.buildDirectory.file('reports/japi.xml').get().asFile
}
